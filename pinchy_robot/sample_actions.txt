Action: /joint_trajectory_controller/follow_joint_trajectory
Action type: control_msgs/action/FollowJointTrajectory

# The trajectory for all revolute, continuous or prismatic joints
trajectory_msgs/JointTrajectory trajectory
        std_msgs/Header header
                builtin_interfaces/Time stamp
                        int32 sec
                        uint32 nanosec
                string frame_id
        string[] joint_names
        JointTrajectoryPoint[] points
                float64[] positions
                float64[] velocities
                float64[] accelerations
                float64[] effort
                builtin_interfaces/Duration time_from_start
                        int32 sec
                        uint32 nanosec


# Sample message
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory "{trajectory: {joint_names: [base_link_to_torso], points: [{positions: [3.14159], time_from_start: {sec: 2.5, nanosec: 0.0}}, {positions: [0.0], time_from_start: {sec: 5.0, nanosec: 0.0}}]}}"
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory "{trajectory: {joint_names: [torso_to_upper_arm, upper_arm_to_lower_arm], points: [{positions: [-0.5, -0.5], time_from_start: {sec: 5.0, nanosec: 0.0}}]}}"
ros2 action send_goal /joint_trajectory_controller/follow_joint_trajectory control_msgs/action/FollowJointTrajectory "{trajectory: {joint_names: [base_link_to_torso, torso_to_upper_arm, upper_arm_to_lower_arm, lower_arm_to_hand], points: [{positions: [3.14159, -1.0, 3.0, -1.5], time_from_start: {sec: 6.5, nanosec: 0.0}}, {positions: [0.0, 0.0, 0.0, 0.0], time_from_start: {sec: 13.0, nanosec: 0.0}}]}}"